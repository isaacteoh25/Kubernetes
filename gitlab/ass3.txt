Let's extend the pipeline and add a new stage.

== DO ==

- add a new stage called "deployment tests".

- create a new job called "test deployment"

- download the first page of the website and search for a specific string (you can use the curl command)

== QUESTION ==

How does your .gitlab-ci.yml file look like?

image: node

stages:
  - build
  - test
  - deploy
  - deployment tests

....

test deployment:
  stage: deployment tests
  script:
    curl -s "https://instazone.surge.sh" | grep "Hi people"
== QUESTION ==

Which Docker image was used by the Gitlab Runner to run this job? 

node

== QUESTION ==

What was the execution time for the "test deployment" job?

n/a

Let's find a way to improve the execution time.

== DO ==

Use the Docker alpine image for this job.

Hint: curl is not installed on the alpine image and you need to install it on your own using a tool called Alpine Linux package management (apk). https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management#Add_a_Package

== QUESTION ==

What was the execution time for the "test deployment" job now?

n/a
image: node

stages:
  - build
  - test
  - deploy

build website:
  stage: build
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
  artifacts:
    paths:
      - ./public

test artifact:
  image: alpine
  stage: test
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy to surge: 
  stage: deploy
  script:
    - npm install --global surge
    - surge --project ./public --domain instazone.surge.sh
	
test deployment:
  image: alpine
  stage: deployment tests
  script:
	-apk add --no-cache curl
	-curl -s "https://instzone.surge.sh" | grep -q "Hi people"